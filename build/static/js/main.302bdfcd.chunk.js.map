{"version":3,"sources":["components/Form.tsx","compoundInterest.ts","components/Output.tsx","numberWithCommas.ts","components/Calculator.tsx","App.tsx","index.tsx"],"names":["Form","state","p","r","n","t","c","cn","handleInitialDeposit","inputHandler","handleContrubution","handleTimeSpan","key","e","preventDefault","input","value","currentTarget","Number","parseFloat","replace","setState","initialValue","toFixed","this","parseRate","frequency","total","principal","i","compoundInterest","onChange","props","className","small","setContributionFrequency","checked","name","maxLength","placeholder","parseInt","toString","handleRate","setCompoundFrequency","Component","MoneyInput","Output","intWithCommas","x","numberWithCommas","totalDisplay","tooMuchMoney","MAX_SAFE_INTEGER","fontSize","length","size","style","raised","delay","milliseconds","Promise","resolve","setTimeout","Calculator","darkMode","visible","force","newMode","undefined","document","body","classList","toggle","options","background","onBackground","id","toggleDarkMode","icon","handleCompoundInterest","App","render","querySelector"],"mappings":"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","file":"static/js/main.302bdfcd.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Radio } from '@rmwc/radio';\n\nimport '@rmwc/radio/styles';\n\nimport compoundInterest from '../compoundInterest';\n\nexport const parseInput = (input: string): number =>\n    Number.parseFloat(input.replace('$', ''));\n\nexport interface FormState {\n    /** The initial principal balance. */\n    p: number,\n    /** The interest rate. */\n    r: number,\n    /** The number of times interest applied per time period. */\n    n: number,\n    /** The number of time periods elapsed. */\n    t: number,\n    /** The ammount contributed at each time preiod. */\n    c: number,\n    /** The number of times contributed per time period. */\n    cn: number\n}\n\nexport interface FormProps {\n    onChange?: (total: number, principle: number) => void\n}\n\nexport default class Form extends Component<FormProps> {\n\n    state: FormState = {\n        p: 10000,\n        r: 0.1,\n        n: 1,\n        t: 2,\n        c: 100,\n        cn: 1\n    }\n\n    inputHandler(key: string): ((event: React.ChangeEvent<HTMLInputElement>) => void) {\n        return (e) => {\n            e.preventDefault();\n\n            const value = parseInput(e.currentTarget.value);\n\n            this.setState({\n                [key]: value\n            });\n        }\n    }\n\n    handleInitialDeposit = this.inputHandler('p');\n    handleContrubution = this.inputHandler('c');\n    handleTimeSpan = this.inputHandler('t');\n\n    parseRate(value: string): number {\n        const initialValue = parseFloat(value.replace('%', ''));\n        const precentage = parseFloat(((initialValue) / 100).toFixed(2));\n\n        return precentage;\n    }\n\n    handleRate(e: React.ChangeEvent<HTMLInputElement>) {\n        e.preventDefault();\n\n        this.setState({\n            r: this.parseRate(e.currentTarget.value) || 0\n        });\n    }\n\n    setContributionFrequency(frequency: string) {\n        let cn = 1;\n\n        if (frequency === 'daily') cn = 365;\n        if (frequency === 'monthly') cn = 12;\n\n        this.setState({ cn });\n    }\n\n    setCompoundFrequency(frequency: string) {\n        let n = 1;\n\n        if (frequency === 'daily') n = 365;\n        if (frequency === 'monthly') n = 12;\n\n        this.setState({ n });\n    }\n\n    render() {\n\n        const { p, r, n, t, c, cn } = this.state;\n        const { total, principal } = compoundInterest(p, r, n, t, c, cn);\n        const { onChange } = this.props;\n\n        if (onChange) onChange(principal, total);\n\n        return (\n            <div className=\"form panel\">\n                <div className=\"form-row\">\n                    <div className=\"row-item\">\n                        <h4>Initial Deposit</h4>\n                        <MoneyInput small value={p} onChange={(e) => this.handleInitialDeposit(e)} />\n                    </div>\n                    <div className=\"row-space\" />\n                    <div className=\"row-item\">\n                        <h4>Contributions</h4>\n                        <MoneyInput value={c || 0} onChange={(e) => this.handleContrubution(e)} />\n                        <div className=\"radio-group\">\n                            <Radio className=\"radio\" value=\"daily\" onChange={e => this.setContributionFrequency(e.currentTarget.value)} checked={cn === 365} name=\"contribution\">Daily</Radio>\n                            <div className=\"spacing\" />\n                            <Radio className=\"radio\" value=\"monthly\" onChange={e => this.setContributionFrequency(e.currentTarget.value)} checked={cn === 12} name=\"contribution\">Monthly</Radio>\n                            <div className=\"spacing\" />\n                            <Radio className=\"radio\" value=\"annually\" onChange={e => this.setContributionFrequency(e.currentTarget.value)} checked={cn === 1} name=\"contribution\">Annually</Radio>\n                        </div>\n                    </div>\n                </div>\n                <br />\n                <div className=\"form-row\">\n                    <div className=\"row-item\">\n                        <h4>Investment Time Span</h4>\n                        <label className=\"text-input-extended large\">\n                            <input className=\"text-input\" maxLength={2} value={t || ''} onChange={(e) => this.handleTimeSpan(e)} placeholder=\"0\" />\n                            <span className=\"text-input-trailing\">years</span>\n                        </label>\n                    </div>\n                    <div className=\"row-space\" />\n                    <div className=\"row-item\">\n                        <h4>Estimated Rate of Return</h4>\n                        <label className=\"text-input-extended\">\n                            <input className=\"text-input\" value={r ? parseInt((r * 100).toString()) : ''} onChange={(e) => this.handleRate(e)} placeholder=\"0%\" />\n                            <span className=\"text-input-trailing\">%</span>\n                        </label>\n                        <br />\n                    </div>\n                </div>\n\n                <br />\n\n                <h4>Compound Frequency</h4>\n                <div>\n                    <div className=\"radio-group\">\n                        <Radio className=\"radio\" value=\"daily\" onChange={e => this.setCompoundFrequency(e.currentTarget.value)} checked={n === 365} name=\"compound\">Daily</Radio>\n                        <div className=\"spacing\" />\n                        <Radio className=\"radio\" value=\"monthly\" onChange={e => this.setCompoundFrequency(e.currentTarget.value)} checked={n === 12} name=\"compound\">Monthly</Radio>\n                        <div className=\"spacing\" />\n                        <Radio className=\"radio\" value=\"annually\" onChange={e => this.setCompoundFrequency(e.currentTarget.value)} checked={n === 1} name=\"compound\">Annually</Radio>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport interface MoneyInputProps {\n    onChange?: ((event: React.ChangeEvent<HTMLInputElement>) => void),\n    value?: number,\n    small?: boolean\n}\n\nexport const MoneyInput: React.FC<MoneyInputProps> = ({ onChange, value, small }) => (\n    <input className={`text-input${small ? ' small' : ''}`} maxLength={20} onChange={onChange} value={value ? `$${value}` : ''} placeholder=\"$0\" />\n);","\nexport interface FutureBalance {\n    principal: number,\n    total: number\n}\n\nexport default function compoundInterest(\n    /** The initial principal balance. */\n    p: number,\n    /** The interest rate. */\n    r: number,\n    /** The number of times interest applied per time period. */\n    n: number,\n    /** The number of time periods elapsed. */\n    t: number,\n    /** The ammount contributed at each time preiod. */\n    c: number,\n    /** The number of times contributed per time period. */\n    cn: number\n): FutureBalance {\n\n    let total = p;\n    let principal = p;\n\n    for (let i = 0; i < t * n; i++) {\n        total += (c * cn) || 0;\n        total = total + (total * r);\n\n        principal += (c * cn) || 0;\n    }\n\n    return { total, principal };\n}","import React from 'react';\nimport numberWithCommas from '../numberWithCommas';\nimport * as Icons from 'react-feather';\nimport { Button } from '@rmwc/button';\n\nimport '@rmwc/button/styles';\n\nexport interface Output {\n    principal: number,\n    total: number\n}\n\nconst Output: React.FC<Output> = ({ principal, total }) => {\n\n    function intWithCommas(x: number): string {\n        return '$' + numberWithCommas(parseInt(x.toString()));\n    }\n\n    let totalDisplay = '$0', principalDisplay = '$0';\n\n    let tooMuchMoney = false;\n\n    if (total >= Number.MAX_SAFE_INTEGER) {\n        tooMuchMoney = true;\n        totalDisplay = 'Too much money!';\n    } else totalDisplay = intWithCommas(total);\n\n    if (principal >= Number.MAX_SAFE_INTEGER) {\n        principalDisplay = 'Too much money!';\n    } else principalDisplay = intWithCommas(principal);\n\n    let fontSize = 44;\n\n    if (totalDisplay.length === 11) { fontSize = 40; }\n    if (totalDisplay.length === 12) { fontSize = 36; }\n    if (totalDisplay.length === 13) { fontSize = 32; }\n    if (totalDisplay.length === 14) { fontSize = 28; }\n    if (totalDisplay.length >= 15) { fontSize = 24; }\n    if (totalDisplay.length >= 19) { fontSize = 20; }\n\n    if (principalDisplay) { }\n\n    return (\n        <div className=\"output panel\">\n            <h2 className=\"future-balance\">Future Balance</h2>\n            <hr />\n            {\n                tooMuchMoney ? (\n                    <div className=\"too-much-money\">\n                        <Icons.AlertTriangle size={52} />\n                        <h2>That's too much money!</h2>\n                    </div>\n                ) : (\n                        <div style={{\n                            fontSize: `${fontSize}px`\n                        }} className=\"output-total\">\n                            {totalDisplay}\n                        </div>\n                    )\n            }\n            <hr />\n            <Button className=\"save-button\" raised>Save</Button>\n        </div>\n    )\n}\n\nexport default Output;\n","export default function numberWithCommas(x: number) {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}","import React, { Component } from 'react';\nimport { ThemeProvider } from '@rmwc/theme';\nimport { Switch } from '@rmwc/switch';\nimport { IconButton } from '@rmwc/icon-button';\n\nimport * as Icons from 'react-feather';\n\nimport '@rmwc/theme/styles';\nimport '@rmwc/switch/styles';\nimport '@rmwc/icon-button/styles';\n\nimport Form from './Form';\nimport Output from './Output';\n\nexport function delay(milliseconds: number) {\n    return new Promise(function (resolve) {\n        setTimeout(resolve, milliseconds);\n    });\n}\n\nexport default class Calculator extends Component {\n\n    state = {\n        darkMode: false,\n        principal: 0,\n        visible: true,\n        total: 0\n    }\n\n    async toggleDarkMode(force?: boolean) {\n\n        await delay(200);\n\n        const { darkMode } = this.state;\n        const newMode = force === null || force === undefined ? !darkMode : force;\n\n        this.setState({\n            visible: false\n        });\n\n        await delay(170);\n\n        this.setState({\n            darkMode: newMode\n        });\n\n        await delay(170);\n\n        this.setState({\n            visible: true\n        });\n    }\n\n    handleCompoundInterest(p: number, t: number) {\n\n        const { principal, total } = this.state;\n\n        if (p !== principal || t !== total) {\n            this.setState({\n                principal: p || 0,\n                total: t || 0\n            });\n        }\n    }\n\n    render() {\n\n        const { darkMode, principal, total, visible } = this.state;\n\n        document.body.classList.toggle('dark', darkMode);\n\n        return (\n            <ThemeProvider options={{\n                background: darkMode ? 'black' : 'white',\n                onBackground: darkMode ? 'white' : 'black'\n            }}>\n                <div className={`calculator${darkMode ? ' dark' : ' light'}${visible ? '' : ' invisible'}`}>\n                    <div className=\"__content__\">\n                        <div className=\"header\">\n                            <h1 className=\"title\">Compound Interest <br /> <span id=\"calculator\">Calculator</span></h1>\n                            <div className=\"actions\">\n                                <div className=\"darkmode-toggle\">\n                                    <p>Dark Mode</p>\n                                    <Switch className=\"switch\" onChange={(e) => {\n                                        this.toggleDarkMode(!!e.currentTarget.checked);\n                                    }} checked={darkMode} />\n                                </div>\n                                <div className=\"verticle-divider\" />\n                                <IconButton icon={\n                                    <Icons.GitHub />\n                                } />\n                            </div>\n                        </div>\n                        <div className=\"calculator-content\">\n                            <Form onChange={(p, t) => this.handleCompoundInterest(p, t)} />\n                            <div className=\"panel-spacing\" />\n                            <Output principal={principal} total={total} />\n                        </div>\n                    </div>\n                    <footer className=\"footer\">\n                        <div className=\"footer-content\">\n                            <h5>Copyright &copy; 2020 Nate Giraudeau</h5>\n                        </div>\n                    </footer>\n                </ div>\n            </ThemeProvider>\n        )\n    }\n}\n","import React from 'react';\n\nimport Calculator from './components/Calculator';\n\nimport './scss/index.scss';\n\nexport default function App() {\n    return (\n        <Calculator />\n    );\n}","import React from 'react';\nimport { render } from 'react-dom';\n\nimport App from './App';\n\nrender(<App />, document.querySelector('#root'));"],"sourceRoot":""}